// color assignment
$border-top-color: #334433;
$border-right-color: #444433;
$border-bottom-color: #112200;
$border-left-color: #112222;
$border-shine-light: #777777;
$border-shine-medium: #223322;
$border-shine-dark: #222211;
$border-plateau-color: #223322;
$tile-color: #223322;
$tile-border-top: #444433;
$tile-border-right: #444433;
$tile-border-bottom: #112222;
$tile-border-left: #112222;
$font-color: #999999;
$font-border: #000000;

body {
    background-color: #000;
}

.fullscreen {
    // position must be fixed to avoid
    // pull-down pull-up scrolling on iPad
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    width: 100%;
    height: 100%;
    overflow: hidden;
}

.ratio {
    overflow: visible;
    position: absolute;
    box-sizing: border-box;

    // width and height is maintained by javascript
    // left and top is maintained by javascript
    // to ensure integer size on tiles
    // and whole integer positions
}

.fullscreen.gameon {
    // hide cursor when game is on
    cursor: none;

    &.userpause {
        // re-enable cursor
        cursor: default;

        // hide current piece
        .piece {
            display: none;
        }

        // hide time
        section.stats .time {

            $svg: (
                '<mask id="p" stroke="none">'
                '<rect fill="white" x="0" y="0" width="880" height="160" />'
                '<path fill="black" d="M55,35 h30 v10 l-20,20 h-10 Z" />'
                '</mask>'
                '<mask id="a" stroke="none">'
                '<rect fill="white" x="0" y="0" width="880" height="160" />'
                '<path fill="black" d="M195,65 v-1 l20,-20 h10 v20 v1 Z" />'
                '</mask>'
                '<mask id="d" stroke="none">'
                '<rect fill="white" x="0" y="0" width="880" height="160" />'
                '<path fill="black" d="M785,35 h31 v60 l-30,30 h-1 Z" />'
                '</mask>'

                '<g stroke="#{$font-border}" fill="#{$font-color}" stroke-width="10">'
                // P
                '<path mask="url(#p)" d="M5,5 h110 l20,20 v30 l-40,40 h-40 v60 h-50 Z" />'
                '<path fill="none" d="M55,35 h30 v10 l-20,20 h-10 Z" />'
                // A
                '<path mask="url(#a)" d="M145,65 l60,-60 h70 v150 h-50 v-60 h-30 v60 h-50 Z" />'
                '<path fill="none" d="M195,65 v-1 l20,-20 h10 v20 v1 Z" />'
                // U
                '<path d="M295,5 h50 v110 h10 l20,-20 v-90 h50 v110 l-40,40 h-70 l-20,-20 Z" />'
                // S
                '<path d="M445,45 l40,-40 h70 v10 h10 v40 h-40 v-20 h-20 v10 l30,30 h10 l30,30 v20 l-30,30 h-80 l-20,-20 v-30 h30 l20,20 h30 v-1 l-40,-40 h-10 l-30,-30 Z" />'
                // E
                '<path d="M595,5 h120 v30 h-70 v20 h50 v30 h-50 v40 h10 l20,-20 h40 v10 l-40,40 h-80 Z" />'
                // D
                '<path mask="url(#d)" d="M735,5 h110 l20,20 v80 l-50,50 h-80 Z" />'
                '<path fill="none" d="M785,35 h31 v60 l-30,30 h-1 Z" />'
                '</g>'
            );                

            @include svg($svg, 0, 0, 870, 160);
            background-position: center center;
            background-size: auto 100%;
            div {
                display: none;
            }
        }


    }
}

section.stats {
    position: absolute;
    width: 100%;
    left: 0;
    // top is maintined by javascript
    // height is auto
}

// elements with a stone border
.stone {
    border-width: 10px;
    border-style: solid;
    border-top-color: $border-top-color;
    border-right-color: $border-right-color;
    border-bottom-color: $border-bottom-color;
    border-left-color: $border-left-color;

    padding: 5px;
    background-color: $border-plateau-color;

    box-sizing: border-box;
    position: relative;
    display: inline-block;
    vertical-align: top;
}

// tiles in a wrapper
.tiles {
    border: 2px solid black;
    position: relative;
}

// piece primitive bgimages
.tiles p, .piece p {
    // width and height is calculated runtime
    display: inline-block;
    vertical-align: top;
    box-sizing: border-box;

    background-color: $tile-color;
    @include piece(8); // space

    // assign svg based on primitive type
    &.p1 { @include piece(1); }
    &.p2 { @include piece(2); }
    &.p3 { @include piece(3); }
    &.p4 { @include piece(4); }
    &.p5 { @include piece(5); }
    &.p6 { @include piece(6); }
    &.pe { @include piece(7); } // eraser
}

// black bg on pieces placed on the board
.tiles p {
    &.p1 { background-color: black; }
    &.p2 { background-color: black; }
    &.p3 { background-color: black; }
    &.p4 { background-color: black; }
    &.p5 { background-color: black; }
    &.p6 { background-color: black; }
}

// light bg on current piece
.piece p {
    &.p1 { background-color: #888; }
    &.p2 { background-color: #888; }
    &.p3 { background-color: #888; }
    &.p4 { background-color: #888; }
    &.p5 { background-color: #888; }
    &.p6 { background-color: #888; }
}

// flash to white when loop is found
.tiles p {
    &.loop {
        background-color: white;
        transition: background-color .8s linear;
    }
}

// piece primitive placement relative to piece origo
.piece {
    // width and height is set by js (one tile)
    // left + top is updated by js
    position: absolute;

    p {
        position: absolute;
        width: 100%;
        height: 100%;
    }

    .x-3 { left: -300%; }
    .x-2 { left: -200%; }
    .x-1 { left: -100%; }
    .x0  { left:    0%; }
    .x1  { left:  100%; }
    .x2  { left:  200%; }
    .x3  { left:  300%; }
    .y-3 { top:  -300%; }
    .y-2 { top:  -200%; }
    .y-1 { top:  -100%; }
    .y0  { top:     0%; }
    .y1  { top:   100%; }
    .y2  { top:   200%; }
    .y3  { top:   300%; }
}

// diagonal shine/shadow on stone borders
.border-shine {
    li {
        width: 10px;
        height: 10px;
        position: absolute;
        &:nth-child(1) {
            left: -10px;
            top: -10px;
            $svg: (
                '<path fill="none" stroke="#{$border-shine-medium}" stroke-width="2"'
                ' d="M0,0 L10,10" />'
            );
            @include svg($svg, 0, 0, 10, 10);
        }
        &:nth-child(2) {
            right: -10px;
            top: -10px;
            $svg: (
                '<path fill="none" stroke="#{$border-shine-light}" stroke-width="2"'
                ' d="M10,0 L0,10" />'
            );
            @include svg($svg, 0, 0, 10, 10);
        }
        &:nth-child(3) {
            right: -10px;
            bottom: -10px;
            $svg: (
                '<path fill="none" stroke="#{$border-shine-medium}" stroke-width="2"'
                ' d="M0,0 L10,10" />'
            );
            @include svg($svg, 0, 0, 10, 10);
        }
        &:nth-child(4) {
            left: -10px;
            bottom: -10px;
            $svg: (
                '<path fill="none" stroke="#{$border-shine-dark}" stroke-width="2"'
                ' d="M0,10 L10,0" />'
            );
            @include svg($svg, 0, 0, 10, 10);
        }
    }
}


// position stats
section.stats {
    .left {
        position: absolute;
        left: 0;
        top: 0;
    }
    .middle {
        position: absolute;
        left: 50%;
        top: 0;
        transform: translate(-50%, 0);
    }
    .right {
        position: absolute;
        right: 0;
        top: 0;
    }
}

.skew {
    // width and height is calculated runtime
    // The padding of the parent element causes trouble in some browsers.
    // The skew element is unable to maintain a proper 1:1 ratio using the
    // common technique:
    //    width:100%; height: 0; padding-bottom: 100%;
    // Certain browsers (safari/OSX + safari/iOS + chrome/iOS) includes
    // the padding in the width calculation, but ommits the padding in the
    // height, thus making the ratio all wrong!
    position: absolute;
    left: 50%;
    top: 50%;
    transform: translate(-50%, -50%);

    $light: #663322;
    $middle: #552211;
    $mellow: #331100;
    $dark: #221100;

    $black: #000000;
    $white: #666666;

    $lighten: #774433;
    $darken: #110800;

    $svg: (
        // north east, outside in
        '<path fill="#{$black}" stroke="none" d="M50,5 l45,45 h-10 l-35,-35 Z" />'
        '<path fill="#{$light}" stroke="none" d="M50,7 l43,43 h-20 l-23,-23 Z" />'
        '<path fill="#{$white}" stroke="none" d="M50,22 l28,28 h-15 l-13,-13 Z" />'
        '<path fill="#{$dark}" stroke="none" d="M50,32 l18,18 h-18 Z" />'
        // north west, outside in
        '<path fill="#{$black}" stroke="none" d="M50,5 l-45,45 h10 l35,-35 Z" />'
        '<path fill="#{$middle}" stroke="none" d="M50,7 l-43,43 h20 l23,-23 Z" />'
        '<path fill="#{$white}" stroke="none" d="M50,22 l-28,28 h15 l13,-13 Z" />'
        '<path fill="#{$mellow}" stroke="none" d="M50,32 l-18,18 h18 Z" />'
        // south west, outside in
        '<path fill="#{$black}" stroke="none" d="M50,95 l-45,-45 h10 l35,35 Z" />'
        '<path fill="#{$dark}" stroke="none" d="M50,93 l-43,-43 h20 l23,23 Z" />'
        '<path fill="#{$white}" stroke="none" d="M50,78 l-28,-28 h15 l13,13 Z" />'
        '<path fill="#{$light}" stroke="none" d="M50,68 l-18,-18 h18 Z" />'
        // north west, outside in
        '<path fill="#{$black}" stroke="none" d="M50,95 l45,-45 h-10 l-35,35 Z" />'
        '<path fill="#{$mellow}" stroke="none" d="M50,93 l43,-43 h-20 l-23,23 Z" />'
        '<path fill="#{$white}" stroke="none" d="M50,78 l28,-28 h-15 l-13,13 Z" />'
        '<path fill="#{$middle}" stroke="none" d="M50,68 l18,-18 h-18 Z" />'
        // center
        '<path fill="#{$black}" stroke="none" d="M50,47 l3,3 l-3,3 l-3,-3 Z" />'
    );
    @include svg($svg, 0, 0, 100, 100);
}

// show/hide intro and game sections
.fullscreen {

    section.intro {
        display: block;
        // TODO enable intro anim
    }
    section.board,
    section.stats {
        display: none;
    }

    &.gameon {
        section.intro {
            display: none;
            // TODO disable intro anim
        }
        section.board,
        section.stats {
            display: block;
        }
    }
}

// stats
.stats {
    .top {
        position: absolute;
        bottom: 100%;
        left: 0;
        width: 100%;
        text-align: center;
        color: white;
        // padding-bottom is maintained by js
    }
    .tiles {
        >div {
            position: absolute;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            z-index: 1;
            text-align: center;
        }
        .time div {
            // width is maintained by js
            position: absolute;
            left: 0;
            top: 0;
            height: 100%;
            background-color: #888;
        }
    }
}

// board flashes on wrong move
section.board {
    transition: background-color .2s linear;
    &.wrongmove {
        transition: background-color .2s linear;
        background-color: red;
    }
}

.stats .time.gameover div {
    width: 0%;
    height: 0;
    padding-bottom: percentage(160/1250);
    background-color: transparent;


    $svg: (
        '<mask id="a" stroke="none">'
        '<rect fill="white" x="0" y="0" width="1250" height="160" />'
        '<path fill="black" d="M205,65 v-1 l20,-20 h10 v20 v1 Z" />'
        '</mask>'
        '<mask id="o" stroke="none">'
        '<rect fill="white" x="0" y="0" width="1250" height="160" />'
        '<path fill="black" d="M725,55 l20,-20 h10v70 l-20,20 h-10 Z" />'
        '</mask>'
        '<mask id="r" stroke="none">'
        '<rect fill="white" x="0" y="0" width="1250" height="160" />'
        '<path fill="black" d="M1165,35 h30 v10 l-20,20 h-10 Z" />'
        '</mask>'

        '<g stroke="#{$font-border}" fill="#{$font-color}" stroke-width="10">'
        // G
        '<path d="M5,5 h100 l30,30 v10 h-50 v-10 h-30 v90 h1 l30,-30 v-10 h-21 v-30 h70 v60 l-40,40 h-90 Z" />'
        // A
        '<path mask="url(#a)" d="M155,65 l60,-60 h70 v150 h-50 v-60 h-30 v60 h-50 Z" />'
        '<path fill="none" d="M205,65 v-1 l20,-20 h10 v20 v1 Z" />'
        // M
        '<path d="M305,5 h30 l40,40 h10 l40,-40 h30 v150 h-50 v-80 h-1 l-20,20 h-9 l-20,-20 h-1 v80 h-49 Z" />'
        // E
        '<path d="M475,5 h120 v30 h-70 v20 h50 v30 h-50 v40 h10 l20,-20 h40 v10 l-40,40 h-80 Z" />'
        // O
        '<path mask="url(#o)" d="M675,55 l50,-50 h70 v10 h10 v90 l-50,50 h-70 v-10 h-10 Z" />'
        '<path fill="none" d="M725,55 l20,-20 h10v70 l-20,20 h-10 Z" />'
        // V
        '<path d="M825,5 h50 v90 h1 l30,-30 v-60 h49 v70 l-80,80 h-50 Z" />'
        // E
        '<path d="M975,5 h120 v30 h-70 v20 h50 v30 h-50 v40 h10 l20,-20 h40 v10 l-40,40 h-80 Z" />'
        // R
        '<path mask="url(#r)" d="M1115,5 h100 l20,20 v40 l-30,30 l40,40 v20 h-40 l-40,-40 h-1 v40 h-49 Z" />'
        '<path fill="none" d="M1165,35 h30 v10 l-20,20 h-10 Z" />'
        '</g>'
    );                

    @include svg($svg, 0, 0, 1250, 160);
    background-repeat: no-repeat;
    background-position: left top;
    background-size: auto 100%;

    animation: gameover 2s steps(1) forwards;
}
@keyframes gameover {
    from { width: 0%; }
    11.1% { width: 11.5%; } // G
    22.2% { width: 23.5%; } // A
    33.3% { width: 37.1%; } // M
    44.4% { width: 48%; } // E
    55.5% { width: 52%; } // 
    66.6% { width: 64.8%; } // O
    77.7% { width: 76.7%; } // V
    88.8% { width: 88%; } // E
    to    { width: 100%; } // R
}

// numbers in-game
.num {
    white-space: nowrap;
    span {
        // width + height is set runtime
        display: inline-block;
        vertical-align: top;
    }
    $sw: 'stroke-width="8"';
    .n0 {
        $svg: (
            '<mask id="n0" stroke="none">'
            '<rect fill="white" x="0" y="0" width="100" height="160" />'
            '<path fill="black" d="M35,45 l5,-5 l5,5 v70 l-5,5 l-5,-5 Z" />'
            '</mask>'
            '<g stroke="#{$font-border}" fill="#{$font-color}" #{$sw}>'
            '<path mask="url(#n0)" d="M5,25 l20,-20 h30 l20,20 v110 l-20,20 h-30 l-20,-20 Z" />'
            '<path fill="none" d="M35,45 l5,-5 l5,5 v70 l-5,5 l-5,-5 Z" />'
            '</g>'
        );
        @include svg($svg, 0, 0, 90, 160, 'contain', 'center');
    }
    .n1 {
        $svg: (
            '<g stroke="#{$font-border}" fill="#{$font-color}" #{$sw}>'
            '<path d="M15,25 l20,-20 h20 v120 h20 v30 h-70 v-30 h20 v-60 h-10 Z" />'
            '</g>'
        );
        @include svg($svg, 0, 0, 90, 160, 'contain', 'center');
    }
    .n2 {
        $svg: (
            '<g stroke="#{$font-border}" fill="#{$font-color}" #{$sw}>'
            '<path d="M5,25 l20,-20 h30 l20,20 v40 l-30,50 v10 h30 v30 h-70 v-30 l40,-70 v-20 h-10 v20 h-30 Z" />'
            '</g>'
        );
        @include svg($svg, 0, 0, 90, 160, 'contain', 'center');
    }
    .n3 {
        $svg: (
            '<g stroke="#{$font-border}" fill="#{$font-color}" #{$sw}>'
            '<path d="M5,5 h70 v40 l-10,10 v20 l10,10 v50 l-20,20 h-30 l-20,-20 v-30 h20 l15,15 l5,-5 v-20 l-20,-20 v-20 l20,-20 v-1 h-40 Z" />'
            '</g>'
        );
        @include svg($svg, 0, 0, 90, 160, 'contain', 'center');
    }
    .n4 {
        $svg: (
            '<g stroke="#{$font-border}" fill="#{$font-color}" #{$sw}>'
            '<path d="M5,75 l20,-50 l20,-20 h20 v60 h10 v50 h-10 v40 h-30 v-40 h-30 Z" />'
            '<path fill="none" d="M35,60 v20" />'
            '</g>'
        );
        @include svg($svg, 0, 0, 90, 160, 'contain', 'center');
    }
    .n5 {
        $svg: (
            '<g stroke="#{$font-border}" fill="#{$font-color}" #{$sw}>'
            '<path d="M5,5 h70 v30 h-40 v10 h10 l20,10 l10,10 v70 l-20,20 h-30 l-20,-20 v-30 h30 v10 l5,5 l5,-5 v-30 l-10,-10 h-30 Z" />'
            '</g>'
        );
        @include svg($svg, 0, 0, 90, 160, 'contain', 'center');
    }
    .n6 {
        $svg: (
            '<mask id="n6" stroke="none">'
            '<rect fill="white" x="0" y="0" width="100" height="160" />'
            '<path fill="black" d="M35,100 l5,-5 l5,5 v20 l-5,5 l-5,-5 Z" />'
            '</mask>'
            '<g stroke="#{$font-border}" fill="#{$font-color}" #{$sw}>'
            '<path mask="url(#n6)" d="M5,25 l20,-20 h40 v30 h-20 l-10,10 v20 h20 l20,20 v50 l-20,20 h-30 l-20,-20 Z" />'
            '<path fill="none" d="M35,100 l5,-5 l5,5 v20 l-5,5 l-5,-5 Z" />'
            '</g>'
        );
        @include svg($svg, 0, 0, 90, 160, 'contain', 'center');
    }
    .n7 {
        $svg: (
            '<g stroke="#{$font-border}" fill="#{$font-color}" #{$sw}>'
            '<path d="M5,5 h70 v40 l-30,60 v50 h-30 v-60 l25,-50 v-10 h-35 Z" />'
            '</g>'
        );
        @include svg($svg, 0, 0, 90, 160, 'contain', 'center');
    }
    .n8 {
        $svg: (
            '<mask id="n8" stroke="none">'
            '<rect fill="white" x="0" y="0" width="100" height="160" />'
            '<path fill="black" d="M35,40 l5,-5 l5,5 v10 l-5,10 l-5,-10 Z M45,120 l-5,5 l-5,-5 v-10 l5,-10 l5,10 Z" />'
            '</mask>'
            '<g stroke="#{$font-border}" fill="#{$font-color}" #{$sw}>'
            '<path mask="url(#n8)" d="M5,25 l20,-20 h30 l20,20 v30 l-10,25 l10,25 v30 l-20,20 h-30 l-20,-20 v-30 l10,-25 l-10,-25 Z" />'
            '<path fill="none" d="M35,40 l5,-5 l5,5 v10 l-5,10 l-5,-10 Z M45,120 l-5,5 l-5,-5 v-10 l5,-10 l5,10 Z" />'
            '</g>'
        );
        @include svg($svg, 0, 0, 90, 160, 'contain', 'center');
    }
    .n9 {
        $svg: (
            '<mask id="n9" stroke="none">'
            '<rect fill="white" x="0" y="0" width="100" height="160" />'
            '<path fill="black" d="M35,40 l5,-5 l5,5 v20 l-5,5 l-5,-5 Z" />'
            '</mask>'
            '<g stroke="#{$font-border}" fill="#{$font-color}" #{$sw}>'
            '<path mask="url(#n9)" d="M5,25 l20,-20 h30 l20,20 v70 l-10,40 l-20,20 h-30 v-20 l20,-20 l10,-20 v-1 h-20 l-20,-20 Z" />'
            '<path fill="none" d="M35,40 l5,-5 l5,5 v20 l-5,5 l-5,-5 Z" />'
            '</g>'
        );
        @include svg($svg, 0, 0, 90, 160, 'contain', 'center');
    }
}

// LOOPZ logo
.logo {
    width: 80%;
    height: 0;
    padding-bottom: 20%;
    $sw: 'stroke="white" fill="none"';
    $sb: 'stroke="black" fill="none"';

    $svg: (
        '<g #{$sb} stroke-width="54">'
            '<path d="M120,157 h-83 v-144" />'
            '<circle cx="218" cy="99" r="66" />'
            '<circle cx="409" cy="99" r="66" />'
            '<path d="M542,186 v-147 h31 a30,30 0 1 1 0,60 h-31" />'
            '<path d="M791,157 h-116 v-4 l89,-113 v-1 h-115" />'
        '</g>'
        '<g #{$sw} stroke-width="46">'
            '<path d="M114,155 h-80 v-140" />'
            '<circle cx="216" cy="98" r="66" />'
            '<circle cx="407" cy="98" r="66" />'
            '<path d="M540,181 v-144 h31 a30,30 0 1 1 0,60 h-31" />'
            '<path d="M784,155 h-111 v-3 l88,-112 v-3 h-111" />'
        '</g>'
        '<g #{$sb} stroke-width="33">'
            '<path d="M110,157 h-73 v-135" />'
            '<circle cx="218" cy="99" r="66" />'
            '<circle cx="409" cy="99" r="66" />'
            '<path d="M542,176 v-137 h31 a30,30 0 1 1 0,60 h-31" />'
            '<path d="M782,157 h-107 v-4 l89,-113 v-1 h-106" />'                
        '</g>'
        '<g #{$sw} stroke-width="26">'
            '<path d="M105,155 h-70 v-131" />'
            '<circle cx="216" cy="98" r="66" />'
            '<circle cx="407" cy="98" r="66" />'
            '<path d="M540,171 v-134 h31 a30,30 0 1 1 0,60 h-31" />'
            '<path d="M775,155 h-102 v-3 l88,-112 v-3 h-102" />'
        '</g>'
        '<g #{$sb} stroke-width="14">'
            '<path d="M101,157 h-63 v-125" />'
            '<circle cx="218" cy="99" r="66" />'
            '<circle cx="409" cy="99" r="66" />'
            '<path d="M542,166 v-127 h31 a30,30 0 1 1 0,60 h-31" />'
            '<path d="M773,157 h-98 v-4 l89,-113 v-1 h-97" />'
        '</g>'
        '<g #{$sw} stroke-width="8">'
            '<path d="M96,155 h-60 v-122" />'
            '<circle cx="216" cy="98" r="66" />'
            '<circle cx="407" cy="98" r="66" />'
            '<path d="M540,161 v-124 h31 a30,30 0 1 1 0,60 h-31" />'
            '<path d="M766,155 h-93 v-3 l88,-112 v-3 h-93" />'            
        '</g>'
    );
    @include svg($svg, 0, 0, 800, 200);
    margin: 0 auto;
}

// intro section

section.intro {
    li {
        position: absolute;
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        box-sizing: border-box;
        padding-top: 22%;

        opacity: 0;
        &:nth-child(1) {
            animation: intro 24s linear infinite;
        }
        &:nth-child(2) {
            animation: intro 24s 8s linear infinite;
        }
        &:nth-child(3) {
            animation: intro 24s 16s linear infinite;
        }
        &:nth-child(4) {
            opacity: 1;
        }
    }
    @keyframes intro {
        from, to { opacity: 0; }
        2%, 31% { opacity: 1; }
        33% { opacity: 0; }
    }

    .charset span {
        display: inline-block;
        vertical-align: top;

        background-image: url('assets/images/chars576x30.png');
        background-repeat: no-repeat;
        background-position: left center;
        background-size: auto 100%;
        // the power of the pixels <3
        image-rendering: pixelated;

        // width + height is the same for all chars
        // and maintained by js

        &.a   { @include setCharPos(0); }
        &.b   { @include setCharPos(16); }
        &.c   { @include setCharPos(32); }
        &.d   { @include setCharPos(48); }
        &.e   { @include setCharPos(64); }
        &.f   { @include setCharPos(80); }
        &.g   { @include setCharPos(96); }
        &.h   { @include setCharPos(112); }
        &.i   { @include setCharPos(128); }
        &.j   { @include setCharPos(144); }
        &.k   { @include setCharPos(160); }
        &.l   { @include setCharPos(176); }
        &.m   { @include setCharPos(192); }
        &.n   { @include setCharPos(208); }
        &.o   { @include setCharPos(224); }
        &.p   { @include setCharPos(240); }
        &.q   { @include setCharPos(256); }
        &.r   { @include setCharPos(272); }
        &.s   { @include setCharPos(288); }
        &.t   { @include setCharPos(304); }
        &.u   { @include setCharPos(320); }
        &.v   { @include setCharPos(336); }
        &.w   { @include setCharPos(352); }
        &.x   { @include setCharPos(368); }
        &.y   { @include setCharPos(384); }
        &.z   { @include setCharPos(400); }
        &.n0  { @include setCharPos(416); }
        &.n1  { @include setCharPos(432); }
        &.n2  { @include setCharPos(448); }
        &.n3  { @include setCharPos(464); }
        &.n4  { @include setCharPos(480); }
        &.n5  { @include setCharPos(496); }
        &.n6  { @include setCharPos(512); }
        &.n7  { @include setCharPos(528); }
        &.n8  { @include setCharPos(544); }
        &.n9  { @include setCharPos(560); }
        &.spc { background-image: none; }
    }

    p {
        text-align: center;
        &.left {
            text-align: left;
        }
        &.right {
            text-align: right;
        }
        color: green;
    }
    .tab {
        position: relative;
        .right {
            position: absolute;
            left: 0;
            top: 0;
            width: 100%;
            height: auto;
        }
    }
    // start buttons
    button.start {
        padding: 10px 20px;
        border: none;
        &.e {
            background-color: #003300; 
        }
        &.m {
            background-color: #333300; 
        }
        &.h {
            background-color: #330000; 
        }
        // disable interference with button level attribute
        span {
            pointer-events: none;
        }
    }
}
