// color assignment
$border-top-color: #334433;
$border-right-color: #444433;
$border-bottom-color: #112200;
$border-left-color: #112222;
$border-shine-light: #777777;
$border-shine-medium: #223322;
$border-shine-dark: #222211;
$border-plateau-color: #223322;
$tile-color: #223322;
$tile-border-top: #444433;
$tile-border-right: #444433;
$tile-border-bottom: #112222;
$tile-border-left: #112222;

body {
    background-color: #000;
}

.fullscreen {
    // position must be fixed to avoid
    // pull-down pull-up scrolling on iPad
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    width: 100%;
    height: 100%;
    overflow: hidden;
}

.ratio {
    overflow: hidden;
    position: absolute;
    box-sizing: border-box;

    // width and height is maintained by javascript
    // left and top is maintained by javascript
    // to ensure integer size on tiles
    // and whole integer positions
}

section.board {
}

section.stats {
    position: absolute;
    width: 100%;
    left: 0;
    // top is maintined by javascript
    // height is auto
}

// elements with a stone border
.stone {
    border-width: 10px;
    border-style: solid;
    border-top-color: $border-top-color;
    border-right-color: $border-right-color;
    border-bottom-color: $border-bottom-color;
    border-left-color: $border-left-color;

    padding: 5px;
    background-color: $border-plateau-color;

    box-sizing: border-box;
    position: relative;
    display: inline-block;
    vertical-align: top;
}

// tiles in a wrapper
.tiles {
    border: 2px solid black;
}

.tiles p, .piece p {
    // width and height is calculated runtime
    display: inline-block;
    vertical-align: top;
    box-sizing: border-box;

    background-color: $tile-color;
    @include piece(8);

    // assign bg + svg based on primitive type
    &.p1 { background-color: black; @include piece(1); }
    &.p2 { background-color: black; @include piece(2); }
    &.p3 { background-color: black; @include piece(3); }
    &.p4 { background-color: black; @include piece(4); }
    &.p5 { background-color: black; @include piece(5); }
    &.p6 { background-color: black; @include piece(6); }
    &.pe { background-color: black; @include piece(7); } // eraser
}


// diagonal shine/shadow on stone borders
.border-shine {
    li {
        width: 10px;
        height: 10px;
        position: absolute;
        &:nth-child(1) {
            left: -10px;
            top: -10px;
            $svg: (
                '<path fill="none" stroke="#{$border-shine-medium}" stroke-width="2"'
                ' d="M0,0 L10,10" />'
            );
            @include svg($svg, 0, 0, 10, 10);
        }
        &:nth-child(2) {
            right: -10px;
            top: -10px;
            $svg: (
                '<path fill="none" stroke="#{$border-shine-light}" stroke-width="2"'
                ' d="M10,0 L0,10" />'
            );
            @include svg($svg, 0, 0, 10, 10);
        }
        &:nth-child(3) {
            right: -10px;
            bottom: -10px;
            $svg: (
                '<path fill="none" stroke="#{$border-shine-medium}" stroke-width="2"'
                ' d="M0,0 L10,10" />'
            );
            @include svg($svg, 0, 0, 10, 10);
        }
        &:nth-child(4) {
            left: -10px;
            bottom: -10px;
            $svg: (
                '<path fill="none" stroke="#{$border-shine-dark}" stroke-width="2"'
                ' d="M0,10 L10,0" />'
            );
            @include svg($svg, 0, 0, 10, 10);
        }
    }
}


// position stats
section.stats {
    .left {
        position: absolute;
        left: 0;
        top: 0;
    }
    .middle {
        position: absolute;
        left: 50%;
        top: 0;
        transform: translate(-50%, 0);
    }
    .right {
        position: absolute;
        right: 0;
        top: 0;
    }
}

.skew {
    // width and height is calculated runtime
    // The padding of the parent element causes trouble in some browsers.
    // The skew element is unable to maintain a proper 1:1 ratio using the
    // common technique:
    //    width:100%; height: 0; padding-bottom: 100%;
    // Certain browsers (safari/OSX + safari/iOS + chrome/iOS) includes
    // the padding in the width calculation, but ommits the padding in the
    // height, thus making the ratio all wrong!
    position: absolute;
    left: 50%;
    top: 50%;
    transform: translate(-50%, -50%);
    $svg: (
        '<path fill="#00000080" stroke="none" d="M50,5 l45,45 l-45,45 l-45,-45 z" />'
        '<path fill="#ff000080" stroke="none" d="M50,10 l40,40 l-40,40 l-40,-40 z" />'
        '<path fill="#ffffff80" stroke="none" d="M50,20 l30,30 l-30,30 l-30,-30 z" />'
        '<path fill="#ff000080" stroke="none" d="M50,30 l20,20 l-20,20 l-20,-20 z" />'
        '<path fill="#00000080" stroke="none" d="M50,40 l10,10 l-10,10 l-10,-10 z" />'
    );
    @include svg($svg, 0, 0, 100, 100);
}
